{"version":3,"sources":["wordBank.js","utilities.js","Game.js","App.js","index.js"],"names":["wordBank","shuffleArray","array","i","length","j","Math","floor","random","TargetWord","props","spans","targetWord","spanClass","playerInput","charAt","push","key","className","id","WordCarousel","usedWords","slice","max","amountCompletedWords","map","item","index","reverse","upcomingWords","PlayerInput","gameIsOver","document","hasFocus","ResultReport","style","maxHeight","role","aria-label","result","highscore","Game","GAME_LENGTH_SECONDS","initialState","gameUnderway","finishTime","secondsLeft","fetchHighscore","state","validated","this","shiftToNextWord","value","setState","Date","now","gameTimer","setInterval","clearInterval","getResult","getElementById","scrollIntoView","postScore","fetch","method","headers","then","response","json","response_body","error","body","JSON","stringify","time_recorded","username","score","amountStandardisedWordsCompleted","reduce","a","b","round","event","currentPlayerInput","playerInputLength","preventDefault","stopPropagation","restartGame","test","startTimer","setPlayerInput","ctrlKey","validatePlayerInput","addEventListener","handleKeyPress","removeEventListener","gameOpacity","opacity","toFixed","width","React","Component","HelpModal","onClick","toggleCallback","display","enabled","textAlign","App","modalEnabled","toggleModal","ReactDOM","render"],"mappings":"qNAu+BeA,EAv+BE,CACbaACA,OACA,QACA,QACA,MACA,MACA,OACA,OACA,QACA,OACA,OACA,MACA,SACA,MACA,UACA,QACA,UACA,OACA,SACA,QACA,OACA,SACA,SACA,UACA,OACA,OACA,OACA,QACA,UACA,OACA,OACA,MACA,QACA,QACA,QACA,UACA,OACA,QACA,YACA,QACA,QACA,OACA,OACA,WACA,OACA,QACA,SACA,SACA,OACA,OACA,OACA,MACA,UACA,WACA,OACA,MACA,MACA,QACA,OACA,SACA,SACA,OACA,OACA,OACA,OACA,cACA,SACA,WACA,QACA,QACA,MACA,OACA,SACA,UACA,OACA,QACA,MACA,OACA,QACA,QACA,OACA,SACA,OACA,MACA,OACA,SACA,QACA,OACA,SACA,UACA,QACA,WACA,YACA,SACA,aACA,OACA,QACA,SACA,QACA,MACA,MACA,UACA,QACA,QACA,WACA,QACA,QACA,OACA,QACA,OACA,SACA,OACA,MACA,aACA,SACA,MACA,OACA,SACA,QACA,OACA,SACA,OACA,QACA,SACA,OACA,QACA,SACA,OACA,SACA,UACA,MACA,QACA,QACA,SACA,MACA,QACA,UACA,QACA,SACA,QACA,OACA,OACA,OACA,UACA,QACA,QACA,OACA,OACA,OACA,MACA,OACA,MACA,QACA,QACA,OACA,OACA,MACA,OACA,OACA,OACA,OACA,QACA,OACA,SACA,QACA,OACA,SACA,OACA,MACA,OACA,OACA,OACA,UACA,OACA,UACA,UACA,SACA,QACA,UACA,WACA,WACA,YACA,SACA,SACA,UACA,OACA,QACA,SACA,OACA,YACA,SACA,SACA,SACA,WACA,QACA,QACA,OACA,QACA,UACA,SACA,WACA,SACA,OACA,SACA,UACA,MACA,UACA,SACA,QACA,SACA,OACA,OACA,UACA,UACA,QACA,OACA,UACA,QACA,SACA,QACA,OACA,QACA,UACA,UACA,UACA,QACA,YACA,QACA,OACA,SACA,WACA,OACA,MACA,SACA,QACA,OACA,UACA,OACA,SACA,OACA,SACA,OACA,MACA,OACA,SACA,SACA,SACA,OACA,QACA,OACA,WACA,SACA,QACA,QACA,SACA,QACA,OACA,MACA,QACA,QACA,QACA,SACA,OACA,SACA,MACA,QACA,QACA,OACA,OACA,SACA,OACA,UACA,OACA,OACA,WACA,QACA,QACA,MACA,OACA,UACA,UACA,WACA,QACA,aACA,OACA,OACA,OACA,WACA,OACA,OACA,WACA,SACA,UACA,OACA,SACA,SACA,OACA,YACA,QACA,OACA,QACA,QACA,QACA,SACA,SACA,OACA,UACA,QACA,QACA,WACA,SACA,WACA,SACA,QACA,OACA,SACA,UACA,QACA,UACA,OACA,OACA,SACA,QACA,QACA,YACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,WACA,SACA,SACA,QACA,SACA,QACA,SACA,aACA,MACA,SACA,OACA,SACA,QACA,UACA,UACA,UACA,QACA,aACA,QACA,QACA,SACA,MACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,QACA,UACA,YACA,OACA,OACA,QACA,QACA,QACA,SACA,MACA,SACA,OACA,SACA,SACA,QACA,SACA,QACA,WACA,QACA,YACA,QACA,UACA,OACA,QACA,QACA,MACA,OACA,WACA,QACA,UACA,MACA,QACA,SACA,SACA,MACA,QACA,UACA,QACA,OACA,UACA,SACA,SACA,WACA,QACA,OACA,QACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,QACA,SACA,OACA,SACA,MACA,QACA,WACA,QACA,QACA,QC79BWC,MAPf,SAAsBC,GAClB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACnC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,SAAWN,EAAME,QADR,EAEZ,CAACF,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAF4B,KAExBD,EAAMG,GAFkB,OCG3C,SAASI,EAAWC,GAEhB,IADA,IAAMC,EAAQ,GACLR,EAAI,EAAGA,EAAIO,EAAME,WAAWR,OAAQD,IAAK,CAC9C,IAAIU,EAAY,GACZH,EAAMI,YAAYV,OAASD,IAEvBU,EADAH,EAAMI,YAAYC,OAAOZ,KAAOO,EAAME,WAAWG,OAAOZ,GAC5C,gBAEA,mBAGpBQ,EAAMK,KAAK,0BAAMC,IAAKd,EAAGe,UAAWL,GAAYH,EAAME,WAAWG,OAAOZ,KAE5E,OACI,yBAAKgB,GAAG,cAAcR,GAI9B,SAASS,EAAaV,GAClB,IAAMW,EAAYrB,EAASsB,MAAMhB,KAAKiB,IAAI,EAAGb,EAAMc,qBAAuB,IAAKd,EAAMc,sBAAsBC,KAAI,SAACC,EAAMC,GAClH,OAAO,yBAAKV,IAAKS,EAAMR,UAAU,iBAAiBQ,MAEtDL,EAAUO,UACV,IAAMC,EAAgB7B,EAASsB,MAAMZ,EAAMc,qBAAuB,EAAGd,EAAMc,qBAAuB,EAAI,IAAIC,KAAI,SAACC,EAAMC,GACjH,OAAO,yBAAKV,IAAKS,EAAMR,UAAU,iBAAiBQ,MAGtD,OACI,yBAAKP,GAAG,gBACJ,yBAAKA,GAAG,YAAYD,UAAU,kBAAkBG,GAChD,kBAACZ,EAAD,CAAYG,WAAYZ,EAASU,EAAMc,sBAAuBV,YAAaJ,EAAMI,cACjF,yBAAKK,GAAG,gBAAgBD,UAAU,kBAAkBW,IAKhE,SAASC,EAAYpB,GACjB,OACI,yBAAKS,GAAG,eAAeT,EAAMI,YAAY,0BAAMK,GAAG,SAASD,WAAYR,EAAMqB,YAAcC,SAASC,WAAa,WAAa,IAArF,MAIjD,SAASC,EAAaxB,GAClB,OACI,yBAAKS,GAAG,UAAUgB,MAAO,CAAEC,UAAW1B,EAAMqB,WAAa,IAAM,IAC3D,yBAAKb,UAAU,oBACX,sCAAW,0BAAMmB,KAAK,MAAMC,aAAW,UAA5B,iBACX,yBAAKpB,UAAU,iBACX,6BACI,yBAAKA,UAAU,gBAAe,0BAAMmB,KAAK,MAAMC,aAAW,aAA5B,WAA9B,SAAqF,0BAAMpB,UAAU,gBAAgBR,EAAM6B,QAA3H,QAEK7B,EAAM6B,OAAS7B,EAAM8B,UAChB,yBAAKtB,UAAU,gBAAe,0BAAMmB,KAAK,MAAMC,aAAW,YAA5B,iBAA9B,kBAA8F,0BAAMpB,UAAU,qBAAqBR,EAAM8B,UAA3C,iBAC9F,yBAAKtB,UAAU,gBAAe,0BAAMmB,KAAK,MAAMC,aAAW,UAA5B,iBAA9B,aAAuF,0BAAMpB,UAAU,gBAAgBR,EAAM8B,WAA7H,qBAId,yBAAKtB,UAAU,aAAf,wC,IAmKLuB,E,kDAlJX,WAAY/B,GAAQ,IAAD,8BACf,cAAMA,IAVVgC,oBAAsB,GASH,EARnBC,aAAe,CACX7B,YAAa,GACbU,qBAAsB,EACtBoB,cAAc,EACdC,WAAY,KACZC,YAAa,EAAKJ,qBAKlB,EAAKK,iBACL,EAAKC,MAAQ,EAAKL,aAClB1C,EAAaD,GAJE,E,kEAQf,IAEMiD,EAFqBC,KAAKF,MAAMlC,cACnBd,EAASkD,KAAKF,MAAMxB,sBAKvC,OAHIyB,GACAC,KAAKC,kBAEFF,I,qCAGIG,GACXF,KAAKG,SAAS,CAAEvC,YAAasC,M,wCAI7BF,KAAKG,SAAS,CACVvC,YAAa,GACbU,qBAAsB0B,KAAKF,MAAMxB,qBAAuB,M,mCAIlD,IAAD,OACT0B,KAAKG,SAAS,CACVT,cAAc,EACdC,WAAY,IAAIS,KAAKA,KAAKC,MAAmC,IAA3BL,KAAKR,uBAE3C,IAAIc,EAAYC,aAAY,WACxB,EAAKJ,SAAS,CACVP,YAAaxC,KAAKiB,IAAI,GAAI,EAAKyB,MAAMH,WAAa,IAAIS,KAAKA,KAAKC,QAAU,OAE/C,IAA3B,EAAKP,MAAMF,cACXY,cAAcF,GACd,EAAKhB,UAAYlC,KAAKiB,IAAI,EAAKiB,UAAW,EAAKmB,aAC/C3B,SAAS4B,eAAe,WAAWC,iBACnC,EAAKC,eAEV,M,uCAGW,IAAD,OACbC,MAAM,aAAc,CAChBC,OAAQ,MACRC,QAAS,CACL,OAAU,mBACV,eAAgB,sBAErBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACxBF,MAAK,SAAAG,GAAa,OAAI,EAAK7B,UAAY6B,EAAa,SAPzD,OAQW,SAAAC,GAAK,OAAI,EAAK9B,UAAY,O,kCAIrCuB,MAAM,QAAS,CACXC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBM,KAAMC,KAAKC,UAAU,CACjBC,cAAepB,KAAKC,MACpBoB,SAAU,YACVC,MAAO1B,KAAKS,kB,kCAMpB,IAGMkB,EAHoB7E,EAASsB,MAAM,EAAG4B,KAAKF,MAAMxB,sBACPsD,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,EAAE5E,SAAQ,GAC7B8C,KAAKF,MAAMxB,qBACC,EAAK0B,KAAKF,MAAMxB,qBAE9E,OADuBlB,KAAK2E,MAAOJ,GAAoC3B,KAAKR,oBAAsB,MAAS,I,oCAK3GzC,EAAaD,GACbkD,KAAKG,SAASH,KAAKP,gB,qCAGRuC,GACX,IAAMC,EAAqBjC,KAAKF,MAAMlC,YAClCsE,EAAoBD,EAAmB/E,OAK3C,GAJkB,cAAd8E,EAAMjE,MACNiE,EAAMG,iBACNH,EAAMI,mBAEqB,IAA3BpC,KAAKF,MAAMF,YAAmB,CAC9B,GAAkB,UAAdoC,EAAMjE,IAGN,OAFAiC,KAAKqC,cAKT,aAAaC,KAAKN,EAAMjE,MAAQmE,EAAoBpF,EAASkD,KAAKF,MAAMxB,sBAAsBpB,QACzF8C,KAAKF,MAAMJ,cACZM,KAAKuC,aAETvC,KAAKwC,eAAeP,EAAqBD,EAAMjE,MAC1B,cAAdiE,EAAMjE,IACTiE,EAAMS,QACNzC,KAAKwC,eAAe,IAEpBxC,KAAKwC,eAAeP,EAAmB7D,MAAM,EAAGhB,KAAKiB,IAAI,EAAG6D,EAAoB,KAE/D,MAAdF,EAAMjE,MACbiE,EAAMG,iBACNnC,KAAK0C,yB,0CAIQ,IAAD,OAChB5D,SAAS6D,iBAAiB,WAAW,SAACX,GAAD,OAAW,EAAKY,eAAeZ,Q,6CAGhD,IAAD,OACnBlD,SAAS+D,oBAAoB,WAAW,SAACb,GAAD,OAAW,EAAKY,eAAeZ,Q,+BAIvE,IAAMpC,EAAcI,KAAKF,MAAMF,YACzBf,EAA6B,IAAhBe,EACbkD,EAAcjE,EAAa,GAAM,EACvC,OACI,yBAAKZ,GAAG,iBACJ,yBAAKA,GAAG,aAAagB,MAAO,CAAE8D,QAASD,IACnC,yBAAK7E,GAAG,SAAQ,0BAAMkB,KAAK,MAAMC,aAAW,SAA5B,gBAAhB,IAA8D,0BAAMnB,GAAG,WAAWD,UAAY4B,EAAc,GAAKA,EAAc,EAAK,WAAa,IAAKA,EAAYoD,QAAQ,MAE9K,0BAAM/D,MAAO,CAAE8D,QAASD,IACpB,kBAAC5E,EAAD,CAAcI,qBAAsB0B,KAAKF,MAAMxB,qBAAsBV,YAAaoC,KAAKF,MAAMlC,cAC7F,kBAACgB,EAAD,CAAahB,YAAaoC,KAAKF,MAAMlC,YAAaiB,WAAYA,KAElE,kBAACG,EAAD,CAAcK,OAAQW,KAAKS,YAAa5B,WAAYA,EAAYS,UAAWU,KAAKV,YAChF,yBAAKrB,GAAG,gBAAgBgB,MAAO,CAAEgE,MAAkD,KAA1CjD,KAAKR,oBAAsBI,GAAqBI,KAAKR,oBAAsB,Y,GAtJjH0D,IAAMC,WCjEzB,SAASC,EAAU5F,GACf,OACI,yBAAKS,GAAG,QAAQoF,QAAS,kBAAM7F,EAAM8F,kBAAkBrE,MAAO,CAAEsE,QAAS/F,EAAMgG,QAAU,QAAU,SAC/F,yBAAKxF,UAAU,gBACX,2CAAgB,0BAAMmB,KAAK,MAAMC,aAAW,cAA5B,iBAChB,6BACA,yCAAc,0BAAMD,KAAK,MAAMC,aAAW,UAA5B,iBACd,kLAAuJ,6BAAvJ,mGAEA,uCAAY,0BAAMD,KAAK,MAAMC,aAAW,SAA5B,iBACZ,qQACA,4CAAiB,0BAAMD,KAAK,MAAMC,aAAW,YAA5B,iBACjB,2BAAOnB,GAAG,oBACN,+BACI,4BACI,uCACA,6BACA,uFAEJ,4BACI,2CACA,6BACA,mDAEJ,4BACI,gDACA,6BACA,kDAEJ,4BACI,uCACA,6BACA,8DAIZ,6BACA,6BACA,yBAAKgB,MAAO,CAAEwE,UAAW,WACrB,4BAAQzF,UAAU,sBAAsBqF,QAAS,kBAAM7F,EAAM8F,mBAA7D,Y,IA+BLI,E,kDAvBX,WAAYlG,GAAQ,IAAD,8BACf,cAAMA,IACDsC,MAAQ,CAAE6D,cAAc,GAFd,E,0DAMf3D,KAAKG,SAAS,CAAEwD,cAAe3D,KAAKF,MAAM6D,iB,+BAGpC,IAAD,OACL,OACI,yBAAK1F,GAAG,WACJ,kBAACmF,EAAD,CAAWI,QAASxD,KAAKF,MAAM6D,aAAcL,eAAgB,kBAAM,EAAKM,iBACxE,yBAAK3F,GAAG,UACJ,yBAAKD,UAAU,kBAAf,aACA,yBAAKA,UAAU,kCAAkCqF,QAAS,kBAAM,EAAKO,gBAArE,gBAEJ,kBAAC,EAAD,W,GAlBEV,IAAMC,W,MC5CxBU,IAASC,OACL,kBAAC,EAAD,MACAhF,SAAS4B,eAAe,U","file":"static/js/main.9992c17e.chunk.js","sourcesContent":["const wordBank = [\r\n    \"the\",\r\n    \"of\",\r\n    \"to\",\r\n    \"and\",\r\n    \"in\",\r\n    \"is\",\r\n    \"it\",\r\n    \"you\",\r\n    \"that\",\r\n    \"he\",\r\n    \"was\",\r\n    \"for\",\r\n    \"on\",\r\n    \"are\",\r\n    \"with\",\r\n    \"as\",\r\n    \"his\",\r\n    \"they\",\r\n    \"be\",\r\n    \"at\",\r\n    \"one\",\r\n    \"have\",\r\n    \"this\",\r\n    \"from\",\r\n    \"or\",\r\n    \"had\",\r\n    \"by\",\r\n    \"not\",\r\n    \"word\",\r\n    \"but\",\r\n    \"what\",\r\n    \"some\",\r\n    \"we\",\r\n    \"can\",\r\n    \"out\",\r\n    \"other\",\r\n    \"were\",\r\n    \"all\",\r\n    \"there\",\r\n    \"when\",\r\n    \"up\",\r\n    \"use\",\r\n    \"your\",\r\n    \"how\",\r\n    \"said\",\r\n    \"an\",\r\n    \"each\",\r\n    \"she\",\r\n    \"which\",\r\n    \"do\",\r\n    \"their\",\r\n    \"time\",\r\n    \"if\",\r\n    \"will\",\r\n    \"way\",\r\n    \"about\",\r\n    \"many\",\r\n    \"then\",\r\n    \"them\",\r\n    \"write\",\r\n    \"would\",\r\n    \"like\",\r\n    \"so\",\r\n    \"these\",\r\n    \"her\",\r\n    \"long\",\r\n    \"make\",\r\n    \"thing\",\r\n    \"see\",\r\n    \"him\",\r\n    \"two\",\r\n    \"has\",\r\n    \"look\",\r\n    \"more\",\r\n    \"day\",\r\n    \"could\",\r\n    \"go\",\r\n    \"come\",\r\n    \"did\",\r\n    \"number\",\r\n    \"sound\",\r\n    \"no\",\r\n    \"most\",\r\n    \"people\",\r\n    \"my\",\r\n    \"over\",\r\n    \"know\",\r\n    \"water\",\r\n    \"than\",\r\n    \"call\",\r\n    \"first\",\r\n    \"who\",\r\n    \"may\",\r\n    \"down\",\r\n    \"side\",\r\n    \"been\",\r\n    \"now\",\r\n    \"find\",\r\n    \"any\",\r\n    \"new\",\r\n    \"work\",\r\n    \"part\",\r\n    \"take\",\r\n    \"get\",\r\n    \"place\",\r\n    \"made\",\r\n    \"live\",\r\n    \"where\",\r\n    \"after\",\r\n    \"back\",\r\n    \"little\",\r\n    \"only\",\r\n    \"round\",\r\n    \"man\",\r\n    \"year\",\r\n    \"came\",\r\n    \"show\",\r\n    \"every\",\r\n    \"good\",\r\n    \"me\",\r\n    \"give\",\r\n    \"our\",\r\n    \"under\",\r\n    \"name\",\r\n    \"very\",\r\n    \"through\",\r\n    \"just\",\r\n    \"form\",\r\n    \"sentence\",\r\n    \"great\",\r\n    \"think\",\r\n    \"say\",\r\n    \"help\",\r\n    \"low\",\r\n    \"line\",\r\n    \"differ\",\r\n    \"turn\",\r\n    \"cause\",\r\n    \"much\",\r\n    \"mean\",\r\n    \"before\",\r\n    \"move\",\r\n    \"right\",\r\n    \"boy\",\r\n    \"old\",\r\n    \"too\",\r\n    \"same\",\r\n    \"tell\",\r\n    \"does\",\r\n    \"set\",\r\n    \"three\",\r\n    \"want\",\r\n    \"air\",\r\n    \"well\",\r\n    \"also\",\r\n    \"play\",\r\n    \"small\",\r\n    \"end\",\r\n    \"put\",\r\n    \"home\",\r\n    \"read\",\r\n    \"hand\",\r\n    \"port\",\r\n    \"large\",\r\n    \"spell\",\r\n    \"add\",\r\n    \"even\",\r\n    \"land\",\r\n    \"here\",\r\n    \"must\",\r\n    \"big\",\r\n    \"high\",\r\n    \"such\",\r\n    \"follow\",\r\n    \"act\",\r\n    \"why\",\r\n    \"ask\",\r\n    \"men\",\r\n    \"change\",\r\n    \"went\",\r\n    \"light\",\r\n    \"kind\",\r\n    \"off\",\r\n    \"need\",\r\n    \"house\",\r\n    \"picture\",\r\n    \"try\",\r\n    \"us\",\r\n    \"again\",\r\n    \"animal\",\r\n    \"point\",\r\n    \"mother\",\r\n    \"world\",\r\n    \"near\",\r\n    \"build\",\r\n    \"self\",\r\n    \"earth\",\r\n    \"father\",\r\n    \"head\",\r\n    \"stand\",\r\n    \"own\",\r\n    \"page\",\r\n    \"should\",\r\n    \"country\",\r\n    \"found\",\r\n    \"answer\",\r\n    \"school\",\r\n    \"grow\",\r\n    \"study\",\r\n    \"still\",\r\n    \"learn\",\r\n    \"plant\",\r\n    \"cover\",\r\n    \"food\",\r\n    \"sun\",\r\n    \"four\",\r\n    \"between\",\r\n    \"state\",\r\n    \"keep\",\r\n    \"eye\",\r\n    \"never\",\r\n    \"last\",\r\n    \"let\",\r\n    \"thought\",\r\n    \"city\",\r\n    \"tree\",\r\n    \"cross\",\r\n    \"farm\",\r\n    \"hard\",\r\n    \"start\",\r\n    \"might\",\r\n    \"story\",\r\n    \"saw\",\r\n    \"far\",\r\n    \"sea\",\r\n    \"draw\",\r\n    \"left\",\r\n    \"late\",\r\n    \"run\",\r\n    \"while\",\r\n    \"press\",\r\n    \"close\",\r\n    \"night\",\r\n    \"real\",\r\n    \"life\",\r\n    \"few\",\r\n    \"north\",\r\n    \"open\",\r\n    \"seem\",\r\n    \"together\",\r\n    \"next\",\r\n    \"white\",\r\n    \"children\",\r\n    \"begin\",\r\n    \"got\",\r\n    \"walk\",\r\n    \"example\",\r\n    \"ease\",\r\n    \"paper\",\r\n    \"group\",\r\n    \"always\",\r\n    \"music\",\r\n    \"those\",\r\n    \"both\",\r\n    \"mark\",\r\n    \"often\",\r\n    \"letter\",\r\n    \"until\",\r\n    \"mile\",\r\n    \"river\",\r\n    \"car\",\r\n    \"feet\",\r\n    \"care\",\r\n    \"second\",\r\n    \"book\",\r\n    \"carry\",\r\n    \"took\",\r\n    \"science\",\r\n    \"eat\",\r\n    \"room\",\r\n    \"friend\",\r\n    \"began\",\r\n    \"idea\",\r\n    \"fish\",\r\n    \"mountain\",\r\n    \"stop\",\r\n    \"once\",\r\n    \"base\",\r\n    \"hear\",\r\n    \"horse\",\r\n    \"cut\",\r\n    \"sure\",\r\n    \"watch\",\r\n    \"color\",\r\n    \"face\",\r\n    \"wood\",\r\n    \"main\",\r\n    \"enough\",\r\n    \"plain\",\r\n    \"girl\",\r\n    \"usual\",\r\n    \"young\",\r\n    \"ready\",\r\n    \"above\",\r\n    \"ever\",\r\n    \"red\",\r\n    \"list\",\r\n    \"though\",\r\n    \"feel\",\r\n    \"talk\",\r\n    \"bird\",\r\n    \"soon\",\r\n    \"body\",\r\n    \"dog\",\r\n    \"family\",\r\n    \"direct\",\r\n    \"pose\",\r\n    \"leave\",\r\n    \"song\",\r\n    \"measure\",\r\n    \"door\",\r\n    \"product\",\r\n    \"black\",\r\n    \"short\",\r\n    \"numeral\",\r\n    \"class\",\r\n    \"wind\",\r\n    \"question\",\r\n    \"happen\",\r\n    \"complete\",\r\n    \"ship\",\r\n    \"area\",\r\n    \"half\",\r\n    \"rock\",\r\n    \"order\",\r\n    \"fire\",\r\n    \"south\",\r\n    \"problem\",\r\n    \"piece\",\r\n    \"told\",\r\n    \"knew\",\r\n    \"pass\",\r\n    \"since\",\r\n    \"top\",\r\n    \"whole\",\r\n    \"king\",\r\n    \"space\",\r\n    \"heard\",\r\n    \"best\",\r\n    \"hour\",\r\n    \"better\",\r\n    \"true\",\r\n    \"during\",\r\n    \"hundred\",\r\n    \"five\",\r\n    \"remember\",\r\n    \"step\",\r\n    \"early\",\r\n    \"hold\",\r\n    \"west\",\r\n    \"ground\",\r\n    \"interest\",\r\n    \"reach\",\r\n    \"fast\",\r\n    \"verb\",\r\n    \"sing\",\r\n    \"listen\",\r\n    \"six\",\r\n    \"table\",\r\n    \"travel\",\r\n    \"less\",\r\n    \"morning\",\r\n    \"ten\",\r\n    \"simple\",\r\n    \"several\",\r\n    \"vowel\",\r\n    \"toward\",\r\n    \"war\",\r\n    \"lay\",\r\n    \"against\",\r\n    \"pattern\",\r\n    \"slow\",\r\n    \"center\",\r\n    \"love\",\r\n    \"person\",\r\n    \"money\",\r\n    \"serve\",\r\n    \"appear\",\r\n    \"road\",\r\n    \"map\",\r\n    \"rain\",\r\n    \"rule\",\r\n    \"govern\",\r\n    \"pull\",\r\n    \"cold\",\r\n    \"notice\",\r\n    \"voice\",\r\n    \"unit\",\r\n    \"power\",\r\n    \"town\",\r\n    \"fine\",\r\n    \"certain\",\r\n    \"fly\",\r\n    \"fall\",\r\n    \"lead\",\r\n    \"cry\",\r\n    \"dark\",\r\n    \"machine\",\r\n    \"note\",\r\n    \"wait\",\r\n    \"plan\",\r\n    \"figure\",\r\n    \"star\",\r\n    \"box\",\r\n    \"noun\",\r\n    \"field\",\r\n    \"rest\",\r\n    \"correct\",\r\n    \"able\",\r\n    \"pound\",\r\n    \"done\",\r\n    \"beauty\",\r\n    \"drive\",\r\n    \"stood\",\r\n    \"contain\",\r\n    \"front\",\r\n    \"teach\",\r\n    \"week\",\r\n    \"final\",\r\n    \"gave\",\r\n    \"green\",\r\n    \"oh\",\r\n    \"quick\",\r\n    \"develop\",\r\n    \"ocean\",\r\n    \"warm\",\r\n    \"free\",\r\n    \"minute\",\r\n    \"strong\",\r\n    \"special\",\r\n    \"mind\",\r\n    \"behind\",\r\n    \"clear\",\r\n    \"tail\",\r\n    \"produce\",\r\n    \"fact\",\r\n    \"street\",\r\n    \"inch\",\r\n    \"multiply\",\r\n    \"nothing\",\r\n    \"course\",\r\n    \"stay\",\r\n    \"wheel\",\r\n    \"full\",\r\n    \"force\",\r\n    \"blue\",\r\n    \"object\",\r\n    \"decide\",\r\n    \"surface\",\r\n    \"deep\",\r\n    \"moon\",\r\n    \"island\",\r\n    \"foot\",\r\n    \"system\",\r\n    \"busy\",\r\n    \"test\",\r\n    \"record\",\r\n    \"boat\",\r\n    \"common\",\r\n    \"gold\",\r\n    \"possible\",\r\n    \"plane\",\r\n    \"stead\",\r\n    \"dry\",\r\n    \"wonder\",\r\n    \"laugh\",\r\n    \"thousand\",\r\n    \"ago\",\r\n    \"ran\",\r\n    \"check\",\r\n    \"game\",\r\n    \"shape\",\r\n    \"equate\",\r\n    \"hot\",\r\n    \"miss\",\r\n    \"brought\",\r\n    \"heat\",\r\n    \"snow\",\r\n    \"tire\",\r\n    \"bring\",\r\n    \"yes\",\r\n    \"distant\",\r\n    \"fill\",\r\n    \"east\",\r\n    \"paint\",\r\n    \"language\",\r\n    \"among\",\r\n    \"grand\",\r\n    \"ball\",\r\n    \"yet\",\r\n    \"wave\",\r\n    \"drop\",\r\n    \"heart\",\r\n    \"am\",\r\n    \"present\",\r\n    \"heavy\",\r\n    \"dance\",\r\n    \"engine\",\r\n    \"position\",\r\n    \"arm\",\r\n    \"wide\",\r\n    \"sail\",\r\n    \"material\",\r\n    \"size\",\r\n    \"vary\",\r\n    \"settle\",\r\n    \"speak\",\r\n    \"weight\",\r\n    \"general\",\r\n    \"ice\",\r\n    \"matter\",\r\n    \"circle\",\r\n    \"pair\",\r\n    \"include\",\r\n    \"divide\",\r\n    \"syllable\",\r\n    \"felt\",\r\n    \"perhaps\",\r\n    \"pick\",\r\n    \"sudden\",\r\n    \"count\",\r\n    \"square\",\r\n    \"reason\",\r\n    \"length\",\r\n    \"represent\",\r\n    \"art\",\r\n    \"subject\",\r\n    \"region\",\r\n    \"energy\",\r\n    \"hunt\",\r\n    \"probable\",\r\n    \"bed\",\r\n    \"brother\",\r\n    \"egg\",\r\n    \"ride\",\r\n    \"cell\",\r\n    \"believe\",\r\n    \"fraction\",\r\n    \"forest\",\r\n    \"sit\",\r\n    \"race\",\r\n    \"window\",\r\n    \"store\",\r\n    \"summer\",\r\n    \"train\",\r\n    \"sleep\",\r\n    \"prove\",\r\n    \"lone\",\r\n    \"leg\",\r\n    \"exercise\",\r\n    \"wall\",\r\n    \"catch\",\r\n    \"mount\",\r\n    \"wish\",\r\n    \"sky\",\r\n    \"board\",\r\n    \"joy\",\r\n    \"winter\",\r\n    \"sat\",\r\n    \"written\",\r\n    \"wild\",\r\n    \"instrument\",\r\n    \"kept\",\r\n    \"glass\",\r\n    \"grass\",\r\n    \"cow\",\r\n    \"job\",\r\n    \"edge\",\r\n    \"sign\",\r\n    \"visit\",\r\n    \"past\",\r\n    \"soft\",\r\n    \"fun\",\r\n    \"bright\",\r\n    \"gas\",\r\n    \"weather\",\r\n    \"month\",\r\n    \"million\",\r\n    \"bear\",\r\n    \"finish\",\r\n    \"happy\",\r\n    \"hope\",\r\n    \"flower\",\r\n    \"clothe\",\r\n    \"strange\",\r\n    \"gone\",\r\n    \"jump\",\r\n    \"baby\",\r\n    \"eight\",\r\n    \"village\",\r\n    \"meet\",\r\n    \"root\",\r\n    \"buy\",\r\n    \"raise\",\r\n    \"solve\",\r\n    \"metal\",\r\n    \"whether\",\r\n    \"push\",\r\n    \"seven\",\r\n    \"paragraph\",\r\n    \"third\",\r\n    \"shall\",\r\n    \"held\",\r\n    \"hair\",\r\n    \"describe\",\r\n    \"cook\",\r\n    \"floor\",\r\n    \"either\",\r\n    \"result\",\r\n    \"burn\",\r\n    \"hill\",\r\n    \"safe\",\r\n    \"cat\",\r\n    \"century\",\r\n    \"consider\",\r\n    \"type\",\r\n    \"law\",\r\n    \"bit\",\r\n    \"coast\",\r\n    \"copy\",\r\n    \"phrase\",\r\n    \"silent\",\r\n    \"tall\",\r\n    \"sand\",\r\n    \"soil\",\r\n    \"roll\",\r\n    \"temperature\",\r\n    \"finger\",\r\n    \"industry\",\r\n    \"value\",\r\n    \"fight\",\r\n    \"lie\",\r\n    \"beat\",\r\n    \"excite\",\r\n    \"natural\",\r\n    \"view\",\r\n    \"sense\",\r\n    \"ear\",\r\n    \"else\",\r\n    \"quite\",\r\n    \"broke\",\r\n    \"case\",\r\n    \"middle\",\r\n    \"kill\",\r\n    \"son\",\r\n    \"lake\",\r\n    \"moment\",\r\n    \"scale\",\r\n    \"loud\",\r\n    \"spring\",\r\n    \"observe\",\r\n    \"child\",\r\n    \"straight\",\r\n    \"consonant\",\r\n    \"nation\",\r\n    \"dictionary\",\r\n    \"milk\",\r\n    \"speed\",\r\n    \"method\",\r\n    \"organ\",\r\n    \"pay\",\r\n    \"age\",\r\n    \"section\",\r\n    \"dress\",\r\n    \"cloud\",\r\n    \"surprise\",\r\n    \"quiet\",\r\n    \"stone\",\r\n    \"tiny\",\r\n    \"climb\",\r\n    \"cool\",\r\n    \"design\",\r\n    \"poor\",\r\n    \"lot\",\r\n    \"experiment\",\r\n    \"bottom\",\r\n    \"key\",\r\n    \"iron\",\r\n    \"single\",\r\n    \"stick\",\r\n    \"flat\",\r\n    \"twenty\",\r\n    \"skin\",\r\n    \"smile\",\r\n    \"crease\",\r\n    \"hole\",\r\n    \"trade\",\r\n    \"melody\",\r\n    \"trip\",\r\n    \"office\",\r\n    \"receive\",\r\n    \"row\",\r\n    \"mouth\",\r\n    \"exact\",\r\n    \"symbol\",\r\n    \"die\",\r\n    \"least\",\r\n    \"trouble\",\r\n    \"shout\",\r\n    \"except\",\r\n    \"wrote\",\r\n    \"seed\",\r\n    \"tone\",\r\n    \"join\",\r\n    \"suggest\",\r\n    \"clean\",\r\n    \"break\",\r\n    \"lady\",\r\n    \"yard\",\r\n    \"rise\",\r\n    \"bad\",\r\n    \"blow\",\r\n    \"oil\",\r\n    \"blood\",\r\n    \"touch\",\r\n    \"grew\",\r\n    \"cent\",\r\n    \"mix\",\r\n    \"team\",\r\n    \"wire\",\r\n    \"cost\",\r\n    \"lost\",\r\n    \"brown\",\r\n    \"wear\",\r\n    \"garden\",\r\n    \"equal\",\r\n    \"sent\",\r\n    \"choose\",\r\n    \"fell\",\r\n    \"fit\",\r\n    \"flow\",\r\n    \"fair\",\r\n    \"bank\",\r\n    \"collect\",\r\n    \"save\",\r\n    \"control\",\r\n    \"decimal\",\r\n    \"gentle\",\r\n    \"woman\",\r\n    \"captain\",\r\n    \"practice\",\r\n    \"separate\",\r\n    \"difficult\",\r\n    \"doctor\",\r\n    \"please\",\r\n    \"protect\",\r\n    \"noon\",\r\n    \"whose\",\r\n    \"locate\",\r\n    \"ring\",\r\n    \"character\",\r\n    \"insect\",\r\n    \"caught\",\r\n    \"period\",\r\n    \"indicate\",\r\n    \"radio\",\r\n    \"spoke\",\r\n    \"atom\",\r\n    \"human\",\r\n    \"history\",\r\n    \"effect\",\r\n    \"electric\",\r\n    \"expect\",\r\n    \"crop\",\r\n    \"modern\",\r\n    \"element\",\r\n    \"hit\",\r\n    \"student\",\r\n    \"corner\",\r\n    \"party\",\r\n    \"supply\",\r\n    \"bone\",\r\n    \"rail\",\r\n    \"imagine\",\r\n    \"provide\",\r\n    \"agree\",\r\n    \"thus\",\r\n    \"capital\",\r\n    \"chair\",\r\n    \"danger\",\r\n    \"fruit\",\r\n    \"rich\",\r\n    \"thick\",\r\n    \"soldier\",\r\n    \"process\",\r\n    \"operate\",\r\n    \"guess\",\r\n    \"necessary\",\r\n    \"sharp\",\r\n    \"wing\",\r\n    \"create\",\r\n    \"neighbor\",\r\n    \"wash\",\r\n    \"bat\",\r\n    \"rather\",\r\n    \"crowd\",\r\n    \"corn\",\r\n    \"compare\",\r\n    \"poem\",\r\n    \"string\",\r\n    \"bell\",\r\n    \"depend\",\r\n    \"meat\",\r\n    \"rub\",\r\n    \"tube\",\r\n    \"famous\",\r\n    \"dollar\",\r\n    \"stream\",\r\n    \"fear\",\r\n    \"sight\",\r\n    \"thin\",\r\n    \"triangle\",\r\n    \"planet\",\r\n    \"hurry\",\r\n    \"chief\",\r\n    \"colony\",\r\n    \"clock\",\r\n    \"mine\",\r\n    \"tie\",\r\n    \"enter\",\r\n    \"major\",\r\n    \"fresh\",\r\n    \"search\",\r\n    \"send\",\r\n    \"yellow\",\r\n    \"gun\",\r\n    \"allow\",\r\n    \"print\",\r\n    \"dead\",\r\n    \"spot\",\r\n    \"desert\",\r\n    \"suit\",\r\n    \"current\",\r\n    \"lift\",\r\n    \"rose\",\r\n    \"continue\",\r\n    \"block\",\r\n    \"chart\",\r\n    \"hat\",\r\n    \"sell\",\r\n    \"success\",\r\n    \"company\",\r\n    \"subtract\",\r\n    \"event\",\r\n    \"particular\",\r\n    \"deal\",\r\n    \"swim\",\r\n    \"term\",\r\n    \"opposite\",\r\n    \"wife\",\r\n    \"shoe\",\r\n    \"shoulder\",\r\n    \"spread\",\r\n    \"arrange\",\r\n    \"camp\",\r\n    \"invent\",\r\n    \"cotton\",\r\n    \"born\",\r\n    \"determine\",\r\n    \"quart\",\r\n    \"nine\",\r\n    \"truck\",\r\n    \"noise\",\r\n    \"level\",\r\n    \"chance\",\r\n    \"gather\",\r\n    \"shop\",\r\n    \"stretch\",\r\n    \"throw\",\r\n    \"shine\",\r\n    \"property\",\r\n    \"column\",\r\n    \"molecule\",\r\n    \"select\",\r\n    \"wrong\",\r\n    \"gray\",\r\n    \"repeat\",\r\n    \"require\",\r\n    \"broad\",\r\n    \"prepare\",\r\n    \"salt\",\r\n    \"nose\",\r\n    \"plural\",\r\n    \"anger\",\r\n    \"claim\",\r\n    \"continent\",\r\n    \"oxygen\",\r\n    \"sugar\",\r\n    \"death\",\r\n    \"pretty\",\r\n    \"skill\",\r\n    \"women\",\r\n    \"season\",\r\n    \"solution\",\r\n    \"magnet\",\r\n    \"silver\",\r\n    \"thank\",\r\n    \"branch\",\r\n    \"match\",\r\n    \"suffix\",\r\n    \"especially\",\r\n    \"fig\",\r\n    \"afraid\",\r\n    \"huge\",\r\n    \"sister\",\r\n    \"steel\",\r\n    \"discuss\",\r\n    \"forward\",\r\n    \"similar\",\r\n    \"guide\",\r\n    \"experience\",\r\n    \"score\",\r\n    \"apple\",\r\n    \"bought\",\r\n    \"led\",\r\n    \"pitch\",\r\n    \"coat\",\r\n    \"mass\",\r\n    \"card\",\r\n    \"band\",\r\n    \"rope\",\r\n    \"slip\",\r\n    \"win\",\r\n    \"dream\",\r\n    \"evening\",\r\n    \"condition\",\r\n    \"feed\",\r\n    \"tool\",\r\n    \"total\",\r\n    \"basic\",\r\n    \"smell\",\r\n    \"valley\",\r\n    \"nor\",\r\n    \"double\",\r\n    \"seat\",\r\n    \"arrive\",\r\n    \"master\",\r\n    \"track\",\r\n    \"parent\",\r\n    \"shore\",\r\n    \"division\",\r\n    \"sheet\",\r\n    \"substance\",\r\n    \"favor\",\r\n    \"connect\",\r\n    \"post\",\r\n    \"spend\",\r\n    \"chord\",\r\n    \"fat\",\r\n    \"glad\",\r\n    \"original\",\r\n    \"share\",\r\n    \"station\",\r\n    \"dad\",\r\n    \"bread\",\r\n    \"charge\",\r\n    \"proper\",\r\n    \"bar\",\r\n    \"offer\",\r\n    \"segment\",\r\n    \"slave\",\r\n    \"duck\",\r\n    \"instant\",\r\n    \"market\",\r\n    \"degree\",\r\n    \"populate\",\r\n    \"chick\",\r\n    \"dear\",\r\n    \"enemy\",\r\n    \"reply\",\r\n    \"drink\",\r\n    \"occur\",\r\n    \"support\",\r\n    \"speech\",\r\n    \"nature\",\r\n    \"range\",\r\n    \"steam\",\r\n    \"motion\",\r\n    \"path\",\r\n    \"liquid\",\r\n    \"log\",\r\n    \"meant\",\r\n    \"quotient\",\r\n    \"teeth\",\r\n    \"shell\",\r\n    \"neck\"\r\n];\r\n\r\nexport default wordBank;","function shuffleArray(array) {\r\n    for (let i = 0; i < array.length; i++) {\r\n        const j = Math.floor(Math.random() * array.length);\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n}\r\n\r\nexport default shuffleArray;","import React from \"react\";\r\nimport wordBank from \"./wordBank\";\r\nimport shuffleArray from \"./utilities\";\r\n\r\nfunction TargetWord(props) {\r\n    const spans = [];\r\n    for (let i = 0; i < props.targetWord.length; i++) {\r\n        let spanClass = \"\";\r\n        if (props.playerInput.length > i) {\r\n            if (props.playerInput.charAt(i) === props.targetWord.charAt(i)) {\r\n                spanClass = \"correctLetter\";\r\n            } else {\r\n                spanClass = \"incorrectLetter\";\r\n            }\r\n        }\r\n        spans.push(<span key={i} className={spanClass}>{props.targetWord.charAt(i)}</span>);\r\n    }\r\n    return (\r\n        <div id=\"targetWord\">{spans}</div>\r\n    )\r\n}\r\n\r\nfunction WordCarousel(props) {\r\n    const usedWords = wordBank.slice(Math.max(0, props.amountCompletedWords - 10), props.amountCompletedWords).map((item, index) => {\r\n        return <div key={item} className=\"unfocusedWord\">{item}</div>\r\n    });\r\n    usedWords.reverse();\r\n    const upcomingWords = wordBank.slice(props.amountCompletedWords + 1, props.amountCompletedWords + 1 + 10).map((item, index) => {\r\n        return <div key={item} className=\"unfocusedWord\">{item}</div>\r\n    });\r\n\r\n    return (\r\n        <div id=\"wordCarousel\">\r\n            <div id=\"usedWords\" className=\"unfocusedWords\">{usedWords}</div>\r\n            <TargetWord targetWord={wordBank[props.amountCompletedWords]} playerInput={props.playerInput} />\r\n            <div id=\"upcomingWords\" className=\"unfocusedWords\">{upcomingWords}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction PlayerInput(props) {\r\n    return (\r\n        <div id=\"playerInput\">{props.playerInput}<span id=\"cursor\" className={!props.gameIsOver && document.hasFocus() ? \"blinking\" : \"\"}>|</span></div>\r\n    );\r\n}\r\n\r\nfunction ResultReport(props) {\r\n    return (\r\n        <div id=\"results\" style={{ maxHeight: props.gameIsOver ? 500 : 0 }}>\r\n            <div className=\"resultsContainer\">\r\n                <h1>Result <span role=\"img\" aria-label=\"result\">📋</span></h1>\r\n                <div className=\"flexContainer\">\r\n                    <div>\r\n                        <div className=\"resultMetric\"><span role=\"img\" aria-label=\"lightning\">⚡ </span>Score <span className=\"metricFigure\">{props.result}</span> WPM</div>\r\n                        {\r\n                            (props.result > props.highscore)\r\n                                ? <div className=\"resultMetric\"><span role=\"img\" aria-label=\"confetti\">🎉 </span>New Highscore! <span className=\"previousHighscore\">{props.highscore} [anonymous]</span></div>\r\n                                : <div className=\"resultMetric\"><span role=\"img\" aria-label=\"trophy\">🏆 </span>Highscore <span className=\"metricFigure\">{props.highscore}</span> WPM [anonymous]\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"playAgain\" >Press &lt;Enter&gt; to start a new game</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass Game extends React.Component {\r\n    GAME_LENGTH_SECONDS = 30;\r\n    initialState = {\r\n        playerInput: \"\",\r\n        amountCompletedWords: 0,\r\n        gameUnderway: false,\r\n        finishTime: null,\r\n        secondsLeft: this.GAME_LENGTH_SECONDS,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.fetchHighscore();\r\n        this.state = this.initialState;\r\n        shuffleArray(wordBank);\r\n    }\r\n\r\n    validatePlayerInput() {\r\n        const currentPlayerInput = this.state.playerInput;\r\n        const targetWord = wordBank[this.state.amountCompletedWords];\r\n        const validated = currentPlayerInput === targetWord;\r\n        if (validated) {\r\n            this.shiftToNextWord();\r\n        }\r\n        return validated;\r\n    }\r\n\r\n    setPlayerInput(value) {\r\n        this.setState({ playerInput: value });\r\n    }\r\n\r\n    shiftToNextWord() {\r\n        this.setState({\r\n            playerInput: \"\",\r\n            amountCompletedWords: this.state.amountCompletedWords + 1\r\n        });\r\n    }\r\n\r\n    startTimer() {\r\n        this.setState({\r\n            gameUnderway: true,\r\n            finishTime: new Date(Date.now() + this.GAME_LENGTH_SECONDS * 1000),\r\n        });\r\n        let gameTimer = setInterval(() => {\r\n            this.setState({\r\n                secondsLeft: Math.max(0, (this.state.finishTime - new Date(Date.now())) / 1000)\r\n            });\r\n            if (this.state.secondsLeft === 0) {\r\n                clearInterval(gameTimer);\r\n                this.highscore = Math.max(this.highscore, this.getResult());\r\n                document.getElementById(\"results\").scrollIntoView();\r\n                this.postScore();\r\n            }\r\n        }, 50);\r\n    }\r\n\r\n    fetchHighscore() {\r\n        fetch(\"/highscore\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        }).then(response => response.json())\r\n            .then(response_body => this.highscore = response_body[\"score\"])\r\n            .catch(error => this.highscore = 0);\r\n    }\r\n\r\n    postScore() {\r\n        fetch(\"/post\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                time_recorded: Date.now(),\r\n                username: \"anonymous\",\r\n                score: this.getResult()\r\n            })\r\n        });\r\n    }\r\n\r\n    getResult() {\r\n        const allCompletedWords = wordBank.slice(0, this.state.amountCompletedWords);\r\n        const amountCharactersTyped = allCompletedWords.reduce((a, b) => a + b.length, 0);\r\n        const averageWordLength = amountCharactersTyped / this.state.amountCompletedWords;\r\n        const amountStandardisedWordsCompleted = (averageWordLength / 5) * this.state.amountCompletedWords;\r\n        const wordsPerMinute = Math.round((amountStandardisedWordsCompleted / (this.GAME_LENGTH_SECONDS / 60))) || 0;\r\n        return wordsPerMinute;\r\n    }\r\n\r\n    restartGame() {\r\n        shuffleArray(wordBank);\r\n        this.setState(this.initialState);\r\n    }\r\n\r\n    handleKeyPress(event) {\r\n        const currentPlayerInput = this.state.playerInput;\r\n        let playerInputLength = currentPlayerInput.length;\r\n        if (event.key === \"Backspace\") {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        if (this.state.secondsLeft === 0) {\r\n            if (event.key === \"Enter\") {\r\n                this.restartGame();\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (/^[a-zA-Z]$/.test(event.key) && playerInputLength < wordBank[this.state.amountCompletedWords].length) {\r\n            if (!this.state.gameUnderway) {\r\n                this.startTimer();\r\n            }\r\n            this.setPlayerInput(currentPlayerInput + event.key);\r\n        } else if (event.key === \"Backspace\") {\r\n            if (event.ctrlKey) {\r\n                this.setPlayerInput(\"\");\r\n            } else {\r\n                this.setPlayerInput(currentPlayerInput.slice(0, Math.max(0, playerInputLength - 1)));\r\n            }\r\n        } else if (event.key === \" \") {\r\n            event.preventDefault();\r\n            this.validatePlayerInput();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", (event) => this.handleKeyPress(event));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", (event) => this.handleKeyPress(event));\r\n    }\r\n\r\n    render() {\r\n        const secondsLeft = this.state.secondsLeft;\r\n        const gameIsOver = secondsLeft === 0;\r\n        const gameOpacity = gameIsOver ? 0.5 : 1;\r\n        return (\r\n            <div id=\"gameContainer\">\r\n                <div id=\"timeKeeper\" style={{ opacity: gameOpacity }} >\r\n                    <div id=\"clock\"><span role=\"img\" aria-label=\"clock\">⏲️</span> <span id=\"timeLeft\" className={(secondsLeft < 5 && secondsLeft > 0) ? \"blinking\" : \"\"}>{secondsLeft.toFixed(1)}</span></div>\r\n                </div>\r\n                <main style={{ opacity: gameOpacity }}>\r\n                    <WordCarousel amountCompletedWords={this.state.amountCompletedWords} playerInput={this.state.playerInput} />\r\n                    <PlayerInput playerInput={this.state.playerInput} gameIsOver={gameIsOver} />\r\n                </main>\r\n                <ResultReport result={this.getResult()} gameIsOver={gameIsOver} highscore={this.highscore} />\r\n                <div id=\"completionBar\" style={{ width: (this.GAME_LENGTH_SECONDS - secondsLeft) * 100 / this.GAME_LENGTH_SECONDS + \"%\" }}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game;","import React from \"react\";\r\nimport Game from \"./Game\";\r\n\r\nfunction HelpModal(props) {\r\n    return (\r\n        <div id=\"modal\" onClick={() => props.toggleCallback()} style={{ display: props.enabled ? \"block\" : \"none\" }}>\r\n            <div className=\"modalContent\">\r\n                <h1>How To Play <span role=\"img\" aria-label=\"controller\">🎮</span></h1>\r\n                <br />\r\n                <h2>Objective <span role=\"img\" aria-label=\"target\">🎯</span></h2>\r\n                <p>The goal is to (correctly) type in as many words as possible in the allowed timeframe. The clock starts running as soon as you begin typing a word. <br />The words encountered are randomly chosen from a list of the 1000 most common US-English words.\r\n        </p>\r\n                <h2>Scoring <span role=\"img\" aria-label=\"score\">💯</span></h2>\r\n                <p>For the purposes of calculating WPM (Words Per Minute), a word is standardised to 5 letters/characters. Thus, a word of 10 letters will count as 2 words towards the scoring, reducing the impact of a bad seed of words on the score.</p>\r\n                <h2>Key Bindings <span role=\"img\" aria-label=\"keyboard\">⌨️</span></h2>\r\n                <table id=\"keyBindingsTable\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>&lt;Space&gt;</td>\r\n                            <td></td>\r\n                            <td>Check typed word and advance to next word if validated</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>&lt;Backspace&gt;</td>\r\n                            <td></td>\r\n                            <td>Delete last letter</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>&lt;Ctrl+Backspace&gt;</td>\r\n                            <td></td>\r\n                            <td>Delete whole word</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>&lt;Enter&gt;</td>\r\n                            <td></td>\r\n                            <td>(after game) Start new game</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <br />\r\n                <br />\r\n                <div style={{ textAlign: \"center\" }}>\r\n                    <button className=\"button whiteOnBlack\" onClick={() => props.toggleCallback()}>Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { modalEnabled: false };\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({ modalEnabled: !this.state.modalEnabled });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"content\">\r\n                <HelpModal enabled={this.state.modalEnabled} toggleCallback={() => this.toggleModal()} />\r\n                <nav id=\"navbar\">\r\n                    <div className=\"navigationItem\">Transfero</div>\r\n                    <div className=\"navigationItem navigationButton\" onClick={() => this.toggleModal()}>How To Play</div>\r\n                </nav>\r\n                <Game />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./style.css\";\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}